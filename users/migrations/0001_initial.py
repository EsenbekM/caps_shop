# Generated by Django 3.2.8 on 2022-02-02 21:24

import django.core.validators
from django.db import migrations, models
import users.formatchecker


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=54)),
                ('last_name', models.CharField(max_length=54)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('avatar', users.formatchecker.ContentTypeRestrictedFileField(null=True, upload_to='users/uploads/%Y/%m/%d/')),
                ('city', models.CharField(blank=True, choices=[('ЧҮЙ', 'Чүй'), ('ОШ', 'ОШ'), ('НАРЫН', 'Нарын'), ('ДЖАЛАЛ-АБАД', 'Джалал-АбаД'), ('БАТКЕН', 'Баткен'), ('ТАЛАС', 'Талас'), ('ЫСЫК-КӨЛ', 'Ысык-Көл')], max_length=12, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+996 000 000 000.", regex='^(\\+996),?\\s?\\d{9}$')])),
                ('provider', models.CharField(choices=[('GOOGLE', 'GOOGLE'), ('FACEBOOK', 'FACEBOOK')], max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_banned', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
